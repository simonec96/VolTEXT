// Generated from VolText.g4 by ANTLR 4.9
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class VolTextLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, NOTVAL=31, 
		UNIT=32, FORMATVAL=33, ORIENTATION=34, TXTATF=35, COLORVAL=36, TFVAL=37, 
		POSVAL=38, NVAL=39, ENDLINE=40, ENDNLINE=41, O=42, A=43, C=44, STRING=45, 
		WS=46;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
			"T__25", "T__26", "T__27", "T__28", "T__29", "NOTVAL", "UNIT", "FORMATVAL", 
			"ORIENTATION", "TXTATF", "COLORVAL", "TFVAL", "POSVAL", "NVAL", "ENDLINE", 
			"ENDNLINE", "O", "A", "C", "STRING", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'title:'", "'author:'", "'path:'", "'stylesheet'", "'@'", "'page'", 
			"'div'", "'img'", "'URL:'", "'text'", "'string:'", "'list'", "'item:'", 
			"'fit-x'", "'fit-y'", "':'", "'pos-x'", "'pos-y'", "'angle-rotation'", 
			"'height'", "'width'", "'id:'", "'font-family:'", "'font-size'", "'color:'", 
			"'position:'", "'orientation:'", "'oob:'", "'format:'", "'ordered:'", 
			"'-'", null, null, null, null, null, null, null, null, "'\";'", "';'", 
			"':{'", "'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, "NOTVAL", "UNIT", "FORMATVAL", 
			"ORIENTATION", "TXTATF", "COLORVAL", "TFVAL", "POSVAL", "NVAL", "ENDLINE", 
			"ENDNLINE", "O", "A", "C", "STRING", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public VolTextLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "VolText.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60\u01b8\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t"+
		"\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f"+
		"\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3"+
		"\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\22\3"+
		"\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3"+
		"\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3"+
		"\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3"+
		"\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3!\5!\u0138\n!\3\"\3\""+
		"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\5\"\u0148\n\"\3#\3#\3"+
		"#\3#\3#\3#\5#\u0150\n#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3"+
		"$\3$\3$\3$\3$\5$\u0166\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3&\5&\u017b\n&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u018f\n\'\3(\6(\u0192\n(\r(\16(\u0193"+
		"\3(\3(\6(\u0198\n(\r(\16(\u0199\5(\u019c\n(\3)\3)\3)\3*\3*\3+\3+\3+\3"+
		",\3,\3-\3-\3.\3.\6.\u01ac\n.\r.\16.\u01ad\3.\3.\3/\6/\u01b3\n/\r/\16/"+
		"\u01b4\3/\3/\2\2\60\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r"+
		"\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33"+
		"\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60\3\2\6\5\2\62"+
		";CHch\3\2\62;\4\2\13\f\17\17\5\2\13\f\17\17\"\"\2\u01d0\2\3\3\2\2\2\2"+
		"\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2"+
		"\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2"+
		"\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2"+
		"\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2"+
		"\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2"+
		"\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2"+
		"K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3"+
		"\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\3_\3\2\2\2\5f\3\2\2\2\7n\3\2\2"+
		"\2\tt\3\2\2\2\13\177\3\2\2\2\r\u0081\3\2\2\2\17\u0086\3\2\2\2\21\u008a"+
		"\3\2\2\2\23\u008e\3\2\2\2\25\u0093\3\2\2\2\27\u0098\3\2\2\2\31\u00a0\3"+
		"\2\2\2\33\u00a5\3\2\2\2\35\u00ab\3\2\2\2\37\u00b1\3\2\2\2!\u00b7\3\2\2"+
		"\2#\u00b9\3\2\2\2%\u00bf\3\2\2\2\'\u00c5\3\2\2\2)\u00d4\3\2\2\2+\u00db"+
		"\3\2\2\2-\u00e1\3\2\2\2/\u00e5\3\2\2\2\61\u00f2\3\2\2\2\63\u00fc\3\2\2"+
		"\2\65\u0103\3\2\2\2\67\u010d\3\2\2\29\u011a\3\2\2\2;\u011f\3\2\2\2=\u0127"+
		"\3\2\2\2?\u0130\3\2\2\2A\u0137\3\2\2\2C\u0147\3\2\2\2E\u014f\3\2\2\2G"+
		"\u0165\3\2\2\2I\u0167\3\2\2\2K\u017a\3\2\2\2M\u018e\3\2\2\2O\u0191\3\2"+
		"\2\2Q\u019d\3\2\2\2S\u01a0\3\2\2\2U\u01a2\3\2\2\2W\u01a5\3\2\2\2Y\u01a7"+
		"\3\2\2\2[\u01a9\3\2\2\2]\u01b2\3\2\2\2_`\7v\2\2`a\7k\2\2ab\7v\2\2bc\7"+
		"n\2\2cd\7g\2\2de\7<\2\2e\4\3\2\2\2fg\7c\2\2gh\7w\2\2hi\7v\2\2ij\7j\2\2"+
		"jk\7q\2\2kl\7t\2\2lm\7<\2\2m\6\3\2\2\2no\7r\2\2op\7c\2\2pq\7v\2\2qr\7"+
		"j\2\2rs\7<\2\2s\b\3\2\2\2tu\7u\2\2uv\7v\2\2vw\7{\2\2wx\7n\2\2xy\7g\2\2"+
		"yz\7u\2\2z{\7j\2\2{|\7g\2\2|}\7g\2\2}~\7v\2\2~\n\3\2\2\2\177\u0080\7B"+
		"\2\2\u0080\f\3\2\2\2\u0081\u0082\7r\2\2\u0082\u0083\7c\2\2\u0083\u0084"+
		"\7i\2\2\u0084\u0085\7g\2\2\u0085\16\3\2\2\2\u0086\u0087\7f\2\2\u0087\u0088"+
		"\7k\2\2\u0088\u0089\7x\2\2\u0089\20\3\2\2\2\u008a\u008b\7k\2\2\u008b\u008c"+
		"\7o\2\2\u008c\u008d\7i\2\2\u008d\22\3\2\2\2\u008e\u008f\7W\2\2\u008f\u0090"+
		"\7T\2\2\u0090\u0091\7N\2\2\u0091\u0092\7<\2\2\u0092\24\3\2\2\2\u0093\u0094"+
		"\7v\2\2\u0094\u0095\7g\2\2\u0095\u0096\7z\2\2\u0096\u0097\7v\2\2\u0097"+
		"\26\3\2\2\2\u0098\u0099\7u\2\2\u0099\u009a\7v\2\2\u009a\u009b\7t\2\2\u009b"+
		"\u009c\7k\2\2\u009c\u009d\7p\2\2\u009d\u009e\7i\2\2\u009e\u009f\7<\2\2"+
		"\u009f\30\3\2\2\2\u00a0\u00a1\7n\2\2\u00a1\u00a2\7k\2\2\u00a2\u00a3\7"+
		"u\2\2\u00a3\u00a4\7v\2\2\u00a4\32\3\2\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7"+
		"\7v\2\2\u00a7\u00a8\7g\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa\7<\2\2\u00aa"+
		"\34\3\2\2\2\u00ab\u00ac\7h\2\2\u00ac\u00ad\7k\2\2\u00ad\u00ae\7v\2\2\u00ae"+
		"\u00af\7/\2\2\u00af\u00b0\7z\2\2\u00b0\36\3\2\2\2\u00b1\u00b2\7h\2\2\u00b2"+
		"\u00b3\7k\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5\7/\2\2\u00b5\u00b6\7{\2\2"+
		"\u00b6 \3\2\2\2\u00b7\u00b8\7<\2\2\u00b8\"\3\2\2\2\u00b9\u00ba\7r\2\2"+
		"\u00ba\u00bb\7q\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd\7/\2\2\u00bd\u00be"+
		"\7z\2\2\u00be$\3\2\2\2\u00bf\u00c0\7r\2\2\u00c0\u00c1\7q\2\2\u00c1\u00c2"+
		"\7u\2\2\u00c2\u00c3\7/\2\2\u00c3\u00c4\7{\2\2\u00c4&\3\2\2\2\u00c5\u00c6"+
		"\7c\2\2\u00c6\u00c7\7p\2\2\u00c7\u00c8\7i\2\2\u00c8\u00c9\7n\2\2\u00c9"+
		"\u00ca\7g\2\2\u00ca\u00cb\7/\2\2\u00cb\u00cc\7t\2\2\u00cc\u00cd\7q\2\2"+
		"\u00cd\u00ce\7v\2\2\u00ce\u00cf\7c\2\2\u00cf\u00d0\7v\2\2\u00d0\u00d1"+
		"\7k\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7p\2\2\u00d3(\3\2\2\2\u00d4\u00d5"+
		"\7j\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7i\2\2\u00d8"+
		"\u00d9\7j\2\2\u00d9\u00da\7v\2\2\u00da*\3\2\2\2\u00db\u00dc\7y\2\2\u00dc"+
		"\u00dd\7k\2\2\u00dd\u00de\7f\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7j\2\2"+
		"\u00e0,\3\2\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3\7f\2\2\u00e3\u00e4\7<\2"+
		"\2\u00e4.\3\2\2\2\u00e5\u00e6\7h\2\2\u00e6\u00e7\7q\2\2\u00e7\u00e8\7"+
		"p\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7/\2\2\u00ea\u00eb\7h\2\2\u00eb\u00ec"+
		"\7c\2\2\u00ec\u00ed\7o\2\2\u00ed\u00ee\7k\2\2\u00ee\u00ef\7n\2\2\u00ef"+
		"\u00f0\7{\2\2\u00f0\u00f1\7<\2\2\u00f1\60\3\2\2\2\u00f2\u00f3\7h\2\2\u00f3"+
		"\u00f4\7q\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7v\2\2\u00f6\u00f7\7/\2\2"+
		"\u00f7\u00f8\7u\2\2\u00f8\u00f9\7k\2\2\u00f9\u00fa\7|\2\2\u00fa\u00fb"+
		"\7g\2\2\u00fb\62\3\2\2\2\u00fc\u00fd\7e\2\2\u00fd\u00fe\7q\2\2\u00fe\u00ff"+
		"\7n\2\2\u00ff\u0100\7q\2\2\u0100\u0101\7t\2\2\u0101\u0102\7<\2\2\u0102"+
		"\64\3\2\2\2\u0103\u0104\7r\2\2\u0104\u0105\7q\2\2\u0105\u0106\7u\2\2\u0106"+
		"\u0107\7k\2\2\u0107\u0108\7v\2\2\u0108\u0109\7k\2\2\u0109\u010a\7q\2\2"+
		"\u010a\u010b\7p\2\2\u010b\u010c\7<\2\2\u010c\66\3\2\2\2\u010d\u010e\7"+
		"q\2\2\u010e\u010f\7t\2\2\u010f\u0110\7k\2\2\u0110\u0111\7g\2\2\u0111\u0112"+
		"\7p\2\2\u0112\u0113\7v\2\2\u0113\u0114\7c\2\2\u0114\u0115\7v\2\2\u0115"+
		"\u0116\7k\2\2\u0116\u0117\7q\2\2\u0117\u0118\7p\2\2\u0118\u0119\7<\2\2"+
		"\u01198\3\2\2\2\u011a\u011b\7q\2\2\u011b\u011c\7q\2\2\u011c\u011d\7d\2"+
		"\2\u011d\u011e\7<\2\2\u011e:\3\2\2\2\u011f\u0120\7h\2\2\u0120\u0121\7"+
		"q\2\2\u0121\u0122\7t\2\2\u0122\u0123\7o\2\2\u0123\u0124\7c\2\2\u0124\u0125"+
		"\7v\2\2\u0125\u0126\7<\2\2\u0126<\3\2\2\2\u0127\u0128\7q\2\2\u0128\u0129"+
		"\7t\2\2\u0129\u012a\7f\2\2\u012a\u012b\7g\2\2\u012b\u012c\7t\2\2\u012c"+
		"\u012d\7g\2\2\u012d\u012e\7f\2\2\u012e\u012f\7<\2\2\u012f>\3\2\2\2\u0130"+
		"\u0131\7/\2\2\u0131@\3\2\2\2\u0132\u0133\7o\2\2\u0133\u0138\7o\2\2\u0134"+
		"\u0138\7\'\2\2\u0135\u0136\7r\2\2\u0136\u0138\7v\2\2\u0137\u0132\3\2\2"+
		"\2\u0137\u0134\3\2\2\2\u0137\u0135\3\2\2\2\u0138B\3\2\2\2\u0139\u013a"+
		"\7C\2\2\u013a\u0148\7\62\2\2\u013b\u013c\7C\2\2\u013c\u0148\7\63\2\2\u013d"+
		"\u013e\7C\2\2\u013e\u0148\7\64\2\2\u013f\u0140\7C\2\2\u0140\u0148\7\65"+
		"\2\2\u0141\u0142\7C\2\2\u0142\u0148\7\66\2\2\u0143\u0144\7C\2\2\u0144"+
		"\u0148\7\67\2\2\u0145\u0146\7C\2\2\u0146\u0148\78\2\2\u0147\u0139\3\2"+
		"\2\2\u0147\u013b\3\2\2\2\u0147\u013d\3\2\2\2\u0147\u013f\3\2\2\2\u0147"+
		"\u0141\3\2\2\2\u0147\u0143\3\2\2\2\u0147\u0145\3\2\2\2\u0148D\3\2\2\2"+
		"\u0149\u014a\7j\2\2\u014a\u014b\7q\2\2\u014b\u0150\7t\2\2\u014c\u014d"+
		"\7x\2\2\u014d\u014e\7g\2\2\u014e\u0150\7t\2\2\u014f\u0149\3\2\2\2\u014f"+
		"\u014c\3\2\2\2\u0150F\3\2\2\2\u0151\u0152\7d\2\2\u0152\u0153\7q\2\2\u0153"+
		"\u0154\7n\2\2\u0154\u0166\7f\2\2\u0155\u0156\7k\2\2\u0156\u0157\7v\2\2"+
		"\u0157\u0158\7c\2\2\u0158\u0159\7n\2\2\u0159\u015a\7k\2\2\u015a\u015b"+
		"\7e\2\2\u015b\u0166\7u\2\2\u015c\u015d\7w\2\2\u015d\u015e\7p\2\2\u015e"+
		"\u015f\7f\2\2\u015f\u0160\7g\2\2\u0160\u0161\7t\2\2\u0161\u0162\7n\2\2"+
		"\u0162\u0163\7k\2\2\u0163\u0164\7p\2\2\u0164\u0166\7g\2\2\u0165\u0151"+
		"\3\2\2\2\u0165\u0155\3\2\2\2\u0165\u015c\3\2\2\2\u0166H\3\2\2\2\u0167"+
		"\u0168\7%\2\2\u0168\u0169\t\2\2\2\u0169\u016a\t\2\2\2\u016a\u016b\t\2"+
		"\2\2\u016b\u016c\t\2\2\2\u016c\u016d\t\2\2\2\u016d\u016e\t\2\2\2\u016e"+
		"\u016f\t\2\2\2\u016f\u0170\t\2\2\2\u0170J\3\2\2\2\u0171\u0172\7v\2\2\u0172"+
		"\u0173\7t\2\2\u0173\u0174\7w\2\2\u0174\u017b\7g\2\2\u0175\u0176\7h\2\2"+
		"\u0176\u0177\7c\2\2\u0177\u0178\7n\2\2\u0178\u0179\7u\2\2\u0179\u017b"+
		"\7g\2\2\u017a\u0171\3\2\2\2\u017a\u0175\3\2\2\2\u017bL\3\2\2\2\u017c\u017d"+
		"\7n\2\2\u017d\u018f\7v\2\2\u017e\u017f\7e\2\2\u017f\u018f\7v\2\2\u0180"+
		"\u0181\7t\2\2\u0181\u018f\7v\2\2\u0182\u0183\7n\2\2\u0183\u018f\7e\2\2"+
		"\u0184\u0185\7e\2\2\u0185\u018f\7e\2\2\u0186\u0187\7t\2\2\u0187\u018f"+
		"\7e\2\2\u0188\u0189\7n\2\2\u0189\u018f\7d\2\2\u018a\u018b\7e\2\2\u018b"+
		"\u018f\7d\2\2\u018c\u018d\7t\2\2\u018d\u018f\7d\2\2\u018e\u017c\3\2\2"+
		"\2\u018e\u017e\3\2\2\2\u018e\u0180\3\2\2\2\u018e\u0182\3\2\2\2\u018e\u0184"+
		"\3\2\2\2\u018e\u0186\3\2\2\2\u018e\u0188\3\2\2\2\u018e\u018a\3\2\2\2\u018e"+
		"\u018c\3\2\2\2\u018fN\3\2\2\2\u0190\u0192\t\3\2\2\u0191\u0190\3\2\2\2"+
		"\u0192\u0193\3\2\2\2\u0193\u0191\3\2\2\2\u0193\u0194\3\2\2\2\u0194\u019b"+
		"\3\2\2\2\u0195\u0197\7\60\2\2\u0196\u0198\t\3\2\2\u0197\u0196\3\2\2\2"+
		"\u0198\u0199\3\2\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019c"+
		"\3\2\2\2\u019b\u0195\3\2\2\2\u019b\u019c\3\2\2\2\u019cP\3\2\2\2\u019d"+
		"\u019e\7$\2\2\u019e\u019f\7=\2\2\u019fR\3\2\2\2\u01a0\u01a1\7=\2\2\u01a1"+
		"T\3\2\2\2\u01a2\u01a3\7<\2\2\u01a3\u01a4\7}\2\2\u01a4V\3\2\2\2\u01a5\u01a6"+
		"\7}\2\2\u01a6X\3\2\2\2\u01a7\u01a8\7\177\2\2\u01a8Z\3\2\2\2\u01a9\u01ab"+
		"\7$\2\2\u01aa\u01ac\n\4\2\2\u01ab\u01aa\3\2\2\2\u01ac\u01ad\3\2\2\2\u01ad"+
		"\u01ab\3\2\2\2\u01ad\u01ae\3\2\2\2\u01ae\u01af\3\2\2\2\u01af\u01b0\7$"+
		"\2\2\u01b0\\\3\2\2\2\u01b1\u01b3\t\5\2\2\u01b2\u01b1\3\2\2\2\u01b3\u01b4"+
		"\3\2\2\2\u01b4\u01b2\3\2\2\2\u01b4\u01b5\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6"+
		"\u01b7\b/\2\2\u01b7^\3\2\2\2\16\2\u0137\u0147\u014f\u0165\u017a\u018e"+
		"\u0193\u0199\u019b\u01ad\u01b4\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}